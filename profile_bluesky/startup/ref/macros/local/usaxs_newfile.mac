"""
Replacement newfile macro.

DESCRIPTION
===========

A replacement newfile macro that saves data in a predefined file format and 
optionally creates and uses a log file.

Installation
============

Setup
-----
No special configuration is needed to run these macros. Simply load the macro
file::

  > qdo usaxs_newfile.mac

If a log file is desired to be used, the global variable NEWFILE_SAVELOG must
be set to 1. It defaults to 0 (off).

Dependencies
------------
This macro depends on the following macro files and macros:

* standard.mac

  - :spec:def:`newfile_f`

File information
================

AUTHOR:

  * J Kirchman (JAK, jkirchman), 
    Argonne National Laboratory

CREATION DATE:

  2016-04-29

COPYRIGHT:

  Copyright (c) 2016, UChicago Argonne, LLC

  All Rights Reserved

  APS SPEC macros

  APS SPEC development team,
  X-ray Science Division and APS Engineering Support Division,
  Argonne National Laboratory

LICENSE::

  OPEN SOURCE LICENSE

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

  1. Redistributions of source code must retain the above copyright notice,
     this list of conditions and the following disclaimer.  Software changes,
     modifications, or derivative works, should be noted with comments and
     the author and organization's name.

  2. Redistributions in binary form must reproduce the above copyright notice,
     this list of conditions and the following disclaimer in the documentation
     and/or other materials provided with the distribution.

  3. Neither the names of UChicago Argonne, LLC or the Department of Energy
     nor the names of its contributors may be used to endorse or promote
     products derived from this software without specific prior written
     permission.

  4. The software and the end-user documentation included with the
     redistribution, if any, must include the following acknowledgment:

     "This product includes software produced by UChicago Argonne, LLC
     under Contract No. DE-AC02-06CH11357 with the Department of Energy."

  *****************************************************************************
  *****************************************************************************

  DISCLAIMER

  THE SOFTWARE IS SUPPLIED "AS IS" WITHOUT WARRANTY OF ANY KIND.

  Neither the United States GOVERNMENT, nor the United States Department
  of Energy, NOR uchicago argonne, LLC, nor any of their employees, makes
  any warranty, express or implied, or assumes any legal liability or
  responsibility for the accuracy, completeness, or usefulness of any
  information, data, apparatus, product, or process disclosed, or
  represents that its use would not infringe privately owned rights.

  *****************************************************************************

VERSION::

  $Revision: 1292 $
  $Date: 2016-04-29 15:16:10 -0500 (Fri, 29 Apr 2016) $
  $Author: usaxs $
  $URL: https://subversion.xray.aps.anl.gov/spec/beamlines/USAXS/trunk/macros/local/usaxs_newfile.mac $

CHANGE LOG:

  2016-04-29 (JAK):

  - Original

"""

#==============================================================================
# Global variable definitions
#==============================================================================

    #: Flag to determine whether to use a log file.
    global NEWFILE_SAVELOG
           NEWFILE_SAVELOG = 0

#==============================================================================
# Macro command definitions
#==============================================================================


def newfile '{
  """
  A replacement newfile macro that saves data in a predefined file format and 
  optionally creates and uses a log file.

  USAGE::

    > newfile

  """
	local   s, dfile, scan_num, prev, logf

	prev = DATAFILE
	if ($# == 0) {
                printf("If you provide a different filename, a new scan file will be created.\n") 
                dfile = getsval("\nData file", DATAFILE)
		if (dfile == DATAFILE)
			scan_num = SCAN_N
		scan_num = getval("Last scan number", scan_num)

	} else {
		dfile = "$1"
		scan_num = $2
		if (dfile == DATAFILE && $# == 2)
			SCAN_N = scan_num

	}
        # <prefix> = "%02d_%02d_", month, day (such as "04_26_")
        if (dfile != DATAFILE) {
                printf("The new data file will have format \'mm_dd_<datafilename>.dat\'.\n") 
                dfile = sprintf("%s%s%s",date("%m_%d_"),dfile,".dat") 
        }
	if (newfile_f(dfile, scan_num) == "")
		exit

	printf("Using \"%s\".  Next scan is number %d.\n", DATAFILE, SCAN_N + 1)

        # If logfile desired, close old and open new logfile
        if (NEWFILE_SAVELOG && \
            prev != dfile && prev != "" && prev != "0" && prev != "tty" && prev != "/dev/tty") {
                if ((match(prev,".dat") == length(prev) - 3)) {
                     logf = sub(".dat",".log",prev)
                }
                else { 
                     # Data file has a .dat in the filename, replace last 4 chars
                     logf = substr(prev, 1, length(prev) - 4) ".log"
                }
                printf("%s was %s closed.\n", logf, close(logf)==0 ? "successfully":"unsuccessfully")

                if ( DATAFILE != ""  && DATAFILE !="0" && \
                     DATAFILE != "tty" && DATAFILE != "/dev/tty" && DATAFILE !="/dev/null")  {

                     # Make and verify log file name (replacing .dat with .log)
                     if ((match(DATAFILE,".dat") == length(DATAFILE) - 3)) {
                          logf = sub(".dat",".log",DATAFILE)
                     }
                     else {
                          # Log file has a .dat in the filename, replace last 4 chars
                          logf = substr(DATAFILE, 1, length(DATAFILE) - 4) ".log"
                     }
                     printf("Logging everything in %s\n",logf)
                     on(logf)
                }                                
                   
        }
}'


